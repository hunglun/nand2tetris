//TODO
// troubleshoot IntVal and SetInt

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {

    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    field int length;
    field Array a;
    constructor String new(int maxLength) {
	let length = 0;
	let a = Array.new(maxLength + 1);
	return this;
    }

    /** Disposes this string. */
    method void dispose() {
	do a.dispose();
	return;
    }

    /** Returns the current length of this string. */
    method int length() {
	return length;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
	return a[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
	let a[j]=c;
	return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
	do setCharAt(length, c);
	let length = length + 1;
	return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
	let length = length - 1;
	do setCharAt(length, 0);
	return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
	var int i, sum;
	let i = 0;
	let sum = 0;
	
	while(a[i] > 47 & a[i] < 58 & i < length){ // if a[i] is integer
	    let sum = (sum * 10)  + a[i] - 48;
	    let i = i + 1;
	}
	return sum;
    }

    /** Sets this string to hold a representation of the given value. */
    method void _setInt(int val) {
	var int lastDigit, c;
	let lastDigit = val - ((val / 10) * 10) ;
	let c = 48 + lastDigit;

	if (val < 10){
	    do appendChar(c);
	}else{
	    do _setInt(val/10);
	    do appendChar(c);
	}
	return;
    }

    method void setInt(int val) {
	let length = 0;
	if (val < 0){
	    do appendChar(45);
	    do _setInt(-val);
	}else{
	    do _setInt(val);
	}
	return;
    }

    /** Returns the new line character. */
    function char newLine() {
	return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
	return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
	return 34;
    }
}
